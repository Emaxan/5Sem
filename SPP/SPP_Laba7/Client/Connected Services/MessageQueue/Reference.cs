//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.MessageQueue {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageQueue.IMessageQueue")]
    public interface IMessageQueue {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/AddMassage", ReplyAction="http://tempuri.org/IMessageQueue/AddMassageResponse")]
        void AddMassage(string message, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/AddMassage", ReplyAction="http://tempuri.org/IMessageQueue/AddMassageResponse")]
        System.Threading.Tasks.Task AddMassageAsync(string message, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/RemoveMessage", ReplyAction="http://tempuri.org/IMessageQueue/RemoveMessageResponse")]
        bool RemoveMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/RemoveMessage", ReplyAction="http://tempuri.org/IMessageQueue/RemoveMessageResponse")]
        System.Threading.Tasks.Task<bool> RemoveMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/Dump", ReplyAction="http://tempuri.org/IMessageQueue/DumpResponse")]
        void Dump();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/Dump", ReplyAction="http://tempuri.org/IMessageQueue/DumpResponse")]
        System.Threading.Tasks.Task DumpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/Restore", ReplyAction="http://tempuri.org/IMessageQueue/RestoreResponse")]
        void Restore();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageQueue/Restore", ReplyAction="http://tempuri.org/IMessageQueue/RestoreResponse")]
        System.Threading.Tasks.Task RestoreAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageQueueChannel : IMessageQueue, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageQueueClient : System.ServiceModel.ClientBase<IMessageQueue>, IMessageQueue {
        
        public MessageQueueClient() {
        }
        
        public MessageQueueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageQueueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageQueueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageQueueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddMassage(string message, string parameters) {
            base.Channel.AddMassage(message, parameters);
        }
        
        public System.Threading.Tasks.Task AddMassageAsync(string message, string parameters) {
            return base.Channel.AddMassageAsync(message, parameters);
        }
        
        public bool RemoveMessage() {
            return base.Channel.RemoveMessage();
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMessageAsync() {
            return base.Channel.RemoveMessageAsync();
        }
        
        public void Dump() {
            base.Channel.Dump();
        }
        
        public System.Threading.Tasks.Task DumpAsync() {
            return base.Channel.DumpAsync();
        }
        
        public void Restore() {
            base.Channel.Restore();
        }
        
        public System.Threading.Tasks.Task RestoreAsync() {
            return base.Channel.RestoreAsync();
        }
    }
}
